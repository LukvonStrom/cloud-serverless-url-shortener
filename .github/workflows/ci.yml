name: ci

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "*.*"      

jobs:
  localstack:
    runs-on: ubuntu-latest
    services:
      localstack:
        image: localstack/localstack:latest
        env:
          SERVICES: serverless,cloudfront,cloudformation,iam,sts,s3,route53,acm,cloudwatch,cloudwatch-logs,lambda,apigateway
          DEFAULT_REGION: eu-central-1
          AWS_ACCESS_KEY_ID: localkey
          AWS_SECRET_ACCESS_KEY: localsecret
        ports:
          - 4566:4566
          - 4571:4571
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js 14.12.0
        uses: actions/setup-node@v1
        with:
          node-version: "14.12.0"
      - name: "Install dependencies"
        run: |
          npm ci
      - name: "Build asset"
        run: |
          npm run build
          mkdir -p dist/lib/website
          cp lib/website/index.html dist/lib/website/index.html
      - name: Compress action step
        uses: master-atul/tar-action@v1.0.2
        id: compress
        with:
          command: c
          files: |
            ./dist
          outPath: build.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: tsbuild.tar.gz
          path: ./build.tar.gz
          if-no-files-found: error

      # - name: Bootstrapping LocalStack
      #   run: |
      #     npm run cdklocal:bootstrap
      #   env:
      #     DEFAULT_REGION: eu-central-1
      #     AWS_ACCOUNT_ID: "000000000000"
      #     AWS_ACCESS_KEY_ID: localkey
      #     AWS_SECRET_ACCESS_KEY: localsecret

      # - name: Deploying to LocalStack
      #   run: |
      #     npm run cdklocal:deploy
      #   env:
      #     DEFAULT_REGION: eu-central-1
      #     AWS_ACCOUNT_ID: "000000000000"
      #     AWS_ACCESS_KEY_ID: localkey
      #     AWS_SECRET_ACCESS_KEY: localsecret
      - name: Deploy
        if: env.AWS_ACCESS_KEY_ID && env.AWS_SECRET_ACCESS_KEY
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.RELEASE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.RELEASE_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.RELEASE_AWS_REGION }}
          CI: "true"
        run: |
          npm run cdk:deploy
      - name: Jest
        run: |
          jest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.RELEASE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.RELEASE_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.RELEASE_AWS_REGION }}
